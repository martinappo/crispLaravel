angular.module("portfolioCtrl",["angularFileUpload"]).controller("portfolioController",function(o,e,t,r){var n=o.uploader=new r({url:"/upload"});o.artworkData={},o.submitted=!1,o.master={},o.loading=!1,o.uploads={},o.filesValidator=!1,o.addedArtworkId=0,t.get().success(function(e){o.artworks=e,o.loading=!1}),o.addWork=function(){o.loading=!0,o.artworkData.order=999,t.save(o.artworkData).success(function(e){e.success?t.get().success(function(){o.addedArtworkId=e.artworkId,n.uploadAll()}):(o.submitted=!0,o.loading=!1)}).error(function(o){console.log(o)})},o.deleteWork=function(e){o.loading=!0,t.destroy(e).success(function(){t.get().success(function(e){o.artworks=e,o.loading=!1})})},o.fillEditWork=function(e){console.log("filling fields.."),t.getOne(e).success(function(e){o.artworkData=e,$.each(o.artworkData.images,function(o,e){var t=new r.FileItem(n,{lastModifiedDate:new Date,name:e.url});t.formData.push({id:e.id}),console.log("pushing item to queue: "+JSON.stringify(t.file.name)),n.queue.push(t)}),console.log("fields filled"),o.loading=!1})},$("#editWork").on("hidden.bs.modal",function(){o.reset()}),o.editWork=function(e){o.loading=!0,t.update(o.artworkData).success(function(e){e.success?t.get().success(function(){console.log("Update item success. ArtworkId: "+e.artworkId),o.addedArtworkId=e.artworkId,console.log("starting to upload files"),n.uploadAll()}):(o.submitted=!0,o.loading=!1)}).error(function(o){console.log(o)});try{e.preventDefault()}catch(r){console.log("Couldnt prevent default")}},o.reset=function(){o.artworkData=angular.copy(o.master),o.submitted=!1,o.addWorkForm.title.$dirty=!1,o.addWorkForm.type.$dirty=!1,o.loading=!1,n.clearQueue(),t.get().success(function(e){o.artworks=e,o.loading=!1})},o.sortableOptions={stop:function(){{var e=0;o.artworks.map(function(r){r.order=e,e++,t.update(r).success(function(e){e.success?t.get().success(function(){console.log("Update item success. ArtworkId: "+e.artworkId)}):(o.submitted=!0,o.loading=!1)}).error(function(o){console.log(o)})})}}},o.remove=function(e){var r=e.formData[0].id;0!=r?(console.log("deleting item: "+JSON.stringify(r)),e.file.name==o.artworkData.hover&&(o.artworkData.hover=""),e.file.name==o.artworkData.cover&&(o.artworkData.cover=""),t.destroyImage(r).success(function(){t.get().success(function(e){o.artworks=e})})):console.log("removing item: "+e.file.name),e.remove()},o.radioChanged=function(){o.filesValidator=(o.artworkData.hover+"").length&(o.artworkData.cover+"").length},n.onAfterAddingFile=function(o){console.info("onAfterAddingFile"),o.formData.push({id:!1})},n.onSuccessItem=function(o,e){console.log("on success item"),console.info("response: "+JSON.stringify(e))},n.onCompleteAll=function(){console.log("on complete all uploads"),$("#addWork").modal("hide"),$("#editWork").modal("hide"),o.reset()},n.onErrorItem=function(o,e){console.log("error item: "),console.info("onErrorItem",JSON.stringify(e))},n.onBeforeUploadItem=function(e){e.formData.push({artworkId:o.addedArtworkId}),e.formData.push({hover:o.artworkData.hover}),e.formData.push({cover:o.artworkData.cover}),console.log("Starting to upload: "+e.file.name+" id: "+JSON.stringify(e.formData))}});